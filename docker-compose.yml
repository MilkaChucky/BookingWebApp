version: '3'
services:
  mongodb:
    image: mongo
    expose:
      - "27017"
    volumes:
      - db:/data/db
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
        max_attempts: 5
    networks: 
      - webnet
  booking-web-api:
    build: ./BookingWebApi
    image: booking-web-api
    depends_on:
      - mongodb
    environment:
      - BOOKING_WEB_API_ENV=docker
    ports:
        - "${API_PORT:-3000}:${BOOKING_WEB_API_PORT:-3000}"
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
        max_attempts: 5
    networks:
      - webnet
  booking-web-app:
    build: ./BookingWebApp
    image: booking-web-app
    depends_on:
      - booking-web-api
    ports:
      - "${APP_PORT:-4200}:4200"
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
        max_attempts: 5
    networks:
      - webnet
  docker-visualizer:
    image: dockersamples/visualizer:stable
    ports:
      - "${DOCKER_VIS_PORT:-8080}:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    deploy:
      placement:
        constraints: [node.role == manager]
      restart_policy:
        condition: on-failure
        max_attempts: 5
    networks:
      - webnet
networks:
  webnet:
volumes:
  db: